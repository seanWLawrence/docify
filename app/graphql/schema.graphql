type Document implements Node {
  body: String
  createdAt: TimeStamp!
  id: ID!

  # Fetches an object given its ID.
  node(
    # ID of the object.
    id: ID!
  ): Node
  private: Boolean!
  title: String!
  updatedAt: TimeStamp!
  user: User!
}

type Mutation implements Node {
  id: ID!

  # Fetches an object given its ID.
  node(
    # ID of the object.
    id: ID!
  ): Node
  updateDocument(body: String, documentId: ID!, private: Boolean, title: String): UpdateDocumentPayload
}

# An object with an ID.
interface Node {
  # ID of the object.
  id: ID!
}

type Query implements Node {
  document(documentId: ID!): Document
  id: ID!

  # Fetches an object given its ID.
  node(
    # ID of the object.
    id: ID!
  ): Node
  viewer: User
}

# Date and time in ISO 8601
scalar TimeStamp

# Autogenerated return type of UpdateDocument
type UpdateDocumentPayload {
  document: Document!
  errors: [String!]!
}

type User implements Node {
  createdAt: TimeStamp!
  documents: [Document!]
  email: String!
  encryptedPassword: String!
  id: ID!

  # Fetches an object given its ID.
  node(
    # ID of the object.
    id: ID!
  ): Node
  rememberCreatedAt: TimeStamp
  resetPasswordSentAt: TimeStamp
  resetPasswordToken: String
  updatedAt: TimeStamp!
}