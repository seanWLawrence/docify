type Document {
  body: String
  createdAt: TimeStamp!
  id: ID!
  private: Boolean!
  title: String!
  updatedAt: TimeStamp!
  user: User!
}

type Mutation {
  updateDocument(body: String, documentId: ID!, private: Boolean, title: String): UpdateDocumentPayload
  updateDocumentBody(body: String!, documentId: ID!): UpdateDocumentBodyPayload
  updateDocumentPrivate(documentId: ID!, private: Boolean!): UpdateDocumentPrivatePayload
  updateDocumentTitle(documentId: ID!, title: String!): UpdateDocumentTitlePayload
}

type Query {
  document(documentId: ID!): Document
  viewer: User
}

# Date and time in ISO 8601
scalar TimeStamp

# Autogenerated return type of UpdateDocumentBody
type UpdateDocumentBodyPayload {
  document: Document!
  errors: [String!]!
}

# Autogenerated return type of UpdateDocument
type UpdateDocumentPayload {
  document: Document!
  errors: [String!]!
}

# Autogenerated return type of UpdateDocumentPrivate
type UpdateDocumentPrivatePayload {
  document: Document!
  errors: [String!]!
}

# Autogenerated return type of UpdateDocumentTitle
type UpdateDocumentTitlePayload {
  document: Document!
  errors: [String!]!
}

type User {
  createdAt: TimeStamp!
  documents: [Document!]
  email: String!
  id: ID!
  updatedAt: TimeStamp!
}